version: "3"

services:

  server:
    image: twoheaded/public:mean-docker-server
    restart: on-failure
    depends_on:
      - db
    environment:
    networks:
      - traefik-net
      - db-net
    labels:
      - traefik.docker.network=traefik-net
      - traefik.frontend.rule=Host:api.docker-example.local
      - traefik.port=3000


  client:
    image: twoheaded/public:mean-docker-client
    restart: on-failure
    depends_on:
      - server
    networks:
      - traefik-net
    labels:
      - traefik.frontend.rule=Host:docker-example.local
      - traefik.port=4000


  db:
    image: mongo
    restart: on-failure
    networks:
      - db-net
    labels:
      - traefik.enable=false


  reverse-proxy:
    image: traefik
    command:
      - "--api"
      - "--entrypoints=Name:http Address::80"
      - "--defaultentrypoints=http"
      - "--docker"
      - "--docker.domain=docker-example.local"
      - "--docker.watch"
    restart: always
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      traefik-net:
        aliases:
          - api.docker-example.local

    labels:
      - traefik.frontend.rule=Host:monit.docker-example.local
      - traefik.port=8080


networks:
  traefik-net:
    external: true
  db-net: