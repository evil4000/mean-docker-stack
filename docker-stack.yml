version: "3.5"

services:

  server:
    image: twoheaded/public:mean-docker-server
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
      labels:
        - traefik.docker.network=traefik-net
        - traefik.frontend.rule=Host:api.docker-example.local
        - traefik.port=3000
    environment:
      - "db:uri=mongodb://db/docker"
    networks:
      - traefik-net
      - db-net


  client:
    image: twoheaded/public:mean-docker-client
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
      labels:
        - traefik.frontend.rule=Host:docker-example.local
        - traefik.port=4000
    networks:
      - traefik-net


  db:
    image: mongo
    command:
      - "--smallfiles"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=false
    networks:
      - db-net


  reverse-proxy:
    image: traefik
    command:
      - "--api"
      - "--entrypoints=Name:http Address::80"
      - "--defaultentrypoints=http"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.domain=docker-example.local"
      - "--docker.watch"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.frontend.rule=Host:monit.docker-example.local
        - traefik.port=8080
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      traefik-net:
        aliases:
          - api.docker-example.local


  visualizer:
    image: dockersamples/visualizer:stable
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.frontend.rule=Host:visualizer.docker-example.local
        - traefik.port=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-net


networks:
  traefik-net:
    driver: overlay
    external: true
  db-net:
